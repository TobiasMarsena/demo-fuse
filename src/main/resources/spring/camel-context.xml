<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans      http://www.springframework.org/schema/beans/spring-beans.xsd                  http://camel.apache.org/schema/spring                 http://camel.apache.org/schema/spring/camel-spring.xsd">
    <bean class="org.mycompany.CustomerAggregator" id="customerAggregationStrategy"/>
    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
        <dataFormats>
            <json allowJmsType="true" allowUnmarshallType="true"
                contentTypeHeader="false"
                enableJaxbAnnotationModule="false" id="custFull"
                library="Jackson" prettyPrint="false"
                unmarshalTypeName="org.mycompany.CustomerFull"
                useDefaultObjectMapper="true" useList="false"/>
        </dataFormats>
        <restConfiguration bindingMode="json" component="restlet"
            contextPath="/" port="8080" scheme="http"/>
        <!-- Home route -->
        <rest id="rest-9444b21a-fb2a-4281-a465-e3a91973832c">
            <get id="554a177b-dd91-4931-97f1-9b46a25c3fda" uri="/api/customer/delete">
                <to uri="direct:removeCustomerCache"/>
            </get>
            <get id="d130ce26-b684-44ee-b956-90e079e7b61c" uri="/api/deleteAllCache">
                <to uri="direct:clearCache"/>
            </get>
            <get id="fcd856e4-3a5e-4056-b12a-0558699dc4da" uri="/welcome">
                <to uri="direct:welcome"/>
            </get>
            <get id="ad502389-05df-4369-9269-39d98298492b" uri="/api/customer/complete">
                <to uri="direct:getCustomerAndDetail"/>
            </get>
            <get id="37a05b7d-bc62-4ae7-bdbc-de4d93d26948" uri="/">
                <to uri="direct:home"/>
            </get>
        </rest>
        <route id="home-route">
            <from id="_from7" uri="direct:home"/>
            <to id="_to4" uri="mock:home"/>
        </route>
        <!-- Master route -->
        <route id="_route3">
            <from id="_from6" uri="direct:welcome"/>
            <setBody id="_setBody4">
                <constant>hello</constant>
            </setBody>
        </route>
        <route id="getCustomerAndDetail">
            <from id="_from5" uri="direct:getCustomerAndDetail"/>
            <to id="_to1" uri="direct:customerDataFromCache"/>
            <log id="_log5" message="body from cache >> ${body}"/>
            <choice id="_choice1">
                <when id="_when1">
                    <simple>${body} == null</simple>
                    <log id="_log1" message="Cache is null. Populating cache . . ."/>
                    <setHeader headerName="customer" id="_setHeader1">
                        <method beanType="org.mycompany.Customer" method="setCustomerName"/>
                    </setHeader>
                    <setHeader headerName="detail" id="_setHeader3">
                        <method beanType="org.mycompany.CustomerDetail" method="setDetail"/>
                    </setHeader>
                    <setBody id="_setBody1">
                        <method
                            beanType="org.mycompany.CustomerAggregator" method="createFullBody"/>
                    </setBody>
                    <to id="_to2" uri="direct:customerDataToCache"/>
                    <log id="_log3" message="return aggregated from API: ${body}"/>
                </when>
                <otherwise id="_otherwise1">
                    <log id="_log2" message="Cache is not null: ${body}"/>
                    <log id="_log7" message="Return data from cache: ${body}"/>
                </otherwise>
            </choice>
        </route>
        <route id="customer-data-to-cache">
            <from id="_from4" uri="direct:customerDataToCache"/>
            <marshal id="_marshal1">
                <json library="Jackson"/>
            </marshal>
            <convertBodyTo id="_convertBodyTo1" type="java.lang.String"/>
            <setHeader headerName="CamelInfinispanOperation" id="_setHeader2">
                <constant>CamelInfinispanOperationPut</constant>
            </setHeader>
            <setHeader headerName="CamelInfinispanValue" id="_setHeader6">
                <simple>${body}</simple>
            </setHeader>
            <setHeader headerName="CamelInfinispanKey" id="_setHeader7">
                <constant>CustomerComplete</constant>
            </setHeader>
            <setHeader headerName="CamelInfinispanLifespanTime" id="_setHeader8">
                <constant>5s</constant>
            </setHeader>
            <to id="_to3" uri="infinispan://{{jdg.url}}"/>
            <unmarshal id="_unmarshal1" ref="custFull"/>
            <log id="_log4" message="Success save to cache jboss data grid: ${body}"/>
        </route>
        <route id="_route1">
            <from id="_from1" uri="direct:getCustomer"/>
            <setBody id="_setBody3">
                <method beanType="org.mycompany.Customer" method="setCustomerName"/>
            </setBody>
        </route>
        <route id="_route2">
            <from id="_from2" uri="direct:getDetail"/>
            <setBody id="_setBody2">
                <method beanType="org.mycompany.CustomerDetail" method="setDetail"/>
            </setBody>
        </route>
        <route id="get-timer">
            <from id="_from8" uri="timer://foo?period=5s"/>
            <log id="_log9" message="Periodic 5s task"/>
            <to id="_to5" uri="direct:customerDataFromCache"/>
        </route>
        <route id="clear-cache">
            <from id="_from9" uri="direct:clearCache"/>
            <setHeader headerName="CamelInfinispanOperation" id="_setHeader9">
                <constant>CamelInfinispanOperationClear</constant>
            </setHeader>
            <log id="_log8" message="CACHE CLEARED!!"/>
        </route>
        <route id="remove-cache">
            <from id="_from10" uri="direct:removeCustomerCache"/>
            <setHeader headerName="CamelInfinispanOperation" id="_setHeader10">
                <constant>CamelInfinispanOperationRemove</constant>
            </setHeader>
            <setHeader headerName="CamelInfinispanKey" id="_setHeader11">
                <constant>CustomerComplete</constant>
            </setHeader>
            <log id="_log10" message="Customer cache removed"/>
        </route>
        <route id="customer-cache-to-data">
            <from id="_from3" uri="direct:customerDataFromCache"/>
            <setHeader headerName="CamelInfinispanOperation" id="_setHeader4">
                <constant>CamelInfinispanOperationGet</constant>
            </setHeader>
            <setHeader headerName="CamelInfinispanKey" id="_setHeader5">
                <constant>CustomerComplete</constant>
            </setHeader>
            <to id="_to8" uri="infinispan://{{jdg.url}}"/>
            <setBody id="setResultBody">
                <simple>${header.CamelInfinispanOperationResult}</simple>
            </setBody>
            <choice id="_choice2">
                <when id="_when2">
                    <simple>${${header.CamelInfinispanOperationResult}} != null</simple>
                    <convertBodyTo id="_convertBodyTo2" type="java.lang.String"/>
                    <unmarshal id="_unmarshal4" ref="custFull"/>
                </when>
            </choice>
            <log id="_log6" message="Get customer data from JDG: ${body}"/>
        </route>
    </camelContext>
</beans>
